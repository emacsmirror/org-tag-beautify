;;; org-tag-beautify.el --- Beautify Org Mode tags -*- lexical-binding: t; -*-
;; -*- coding: utf-8 -*-

;; Authors: stardiviner <numbchild@gmail.com>
;; Package-Requires: ((emacs "26.1") (org-pretty-tags "0.2.2") (all-the-icons "4.0.0"))
;; Version: 0.1.0
;; Keywords: hypermedia
;; homepage: https://github.com/stardiviner/org-tag-beautify

;; Copyright (C) 2020-2021 Free Software Foundation, Inc.
;; The source code is licensed under GPLv3.
;; The image data is NOT licensed under GPLv3.

;; org-tag-beautify is free software; you can redistribute it and/or modify it
;; under the terms of the GNU General Public License as published by
;; the Free Software Foundation; either version 3, or (at your option)
;; any later version.
;;
;; org-tag-beautify is distributed in the hope that it will be useful, but WITHOUT
;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
;; License for more details.
;;
;;
;; You should have received a copy of the GNU General Public License
;; along with GNU Emacs.  If not, see <https://www.gnu.org/licenses/>.

;;; Commentary:

;; Usage:
;;
;; (org-tag-beautify-mode 1)

;;; Code:

(require 'org-pretty-tags)
(require 'all-the-icons)

(defgroup org-tag-beautify nil
  "Customize group of `org-tag-beautify-mode'."
  :prefix "org-tag-beautify-"
  :group 'org)

(defcustom org-tag-beautify-data-dir (file-name-directory
                                      (or load-file-name (buffer-file-name)))
  "The org-tag-beautify data directory."
  :type 'string
  :safe #'stringp)

(defcustom org-tag-beautify-icon-height (* (default-font-height) 2)
  "Specify the tag icon height."
  :type 'number
  :safe #'numberp)

(defcustom org-tag-beautify-icon-width (* (default-font-width) 4.5)
  "Specify the tag icon width."
  :type 'number
  :safe #'numberp)

(defun org-tag-beautify-set-common-tag-icons ()
  "Display most common tag as icon."
  (setq org-pretty-tags-surrogate-strings
        (append org-pretty-tags-surrogate-strings
                `(("ARCHIVE" . ,(all-the-icons-material "archive" :face '(:foreground "gray")))
                  ("export" . ,(all-the-icons-material "visibility" :face '(:foreground "orange")))
                  ("noexport" . ,(all-the-icons-material "visibility_off" :face '(:foreground "orange")))
                  ("on" . ,(all-the-icons-material "highlight" :face '(:foreground "orange")))
                  ("off" . ,(all-the-icons-material "highlight_off" :face '(:foreground "orange")))
                  ("deprecated" . ,(all-the-icons-material "format_strikethrough" :face '(:foreground "sienna")))
                  ("block" . ,(all-the-icons-material "block" :face '(:foreground "red")))
                  ("crypt" . ,(all-the-icons-material "enhanced_encryption" :face '(:foreground "DodgerBlue")))
                  ("private" . ,(all-the-icons-material "fingerprint" :face '(:foreground "LawnGreen")))
                  ("face" . ,(all-the-icons-material "face" :face '(:foreground "black")))
                  ("like" . ,(all-the-icons-material "thumb_up" :face '(:foreground "yellow")))
                  ("suggested" . ,(all-the-icons-material "star" :face '(:foreground "yellow")))
                  ("recommended" . ,(all-the-icons-material "star" :face '(:foreground "yellow")))
                  ("favorite" . ,(all-the-icons-material "favorite" :face '(:foreground "red")))
                  ("idea" . ,(all-the-icons-faicon "lightbulb-o" :face '(:foreground "gold")))
                  ("Org" . ,(all-the-icons-fileicon "org" :face '(:foreground "SeaGreen")))
                  ("Emacs" . ,(all-the-icons-fileicon "emacs" :face '(:foreground "LightSlateBlue")))
                  ("org_mode" . ,(all-the-icons-fileicon "org" :face '(:foreground "SeaGreen")))
                  ("Wiki" . ,(all-the-icons-fileicon "mediawiki" :face '(:foreground "gainsboro")))
                  ("language" . ,(all-the-icons-material "language" :face '(:foreground "SkyBlue")))
                  ("translate" . ,(all-the-icons-material "translate" :face '(:foreground "SkyBlue")))
                  ("table" . ,(all-the-icons-faicon "table" :face '(:foreground "DarkGray")))
                  ("schedule" . ,(all-the-icons-material "schedule" :face '(:foreground "CornflowerBlue")))
                  ("timer" . ,(all-the-icons-material "timer" :face '(:foreground "CornflowerBlue")))
                  ("av_timer" . ,(all-the-icons-material "av_timer" :face '(:foreground "CornflowerBlue")))
                  ("snooze" . ,(all-the-icons-material "snooze" :face '(:foreground "CornflowerBlue")))
                  ("notification" . ,(all-the-icons-material "notifications" :face '(:foreground "CornflowerBlue")))
                  ("alarm" . ,(all-the-icons-material "alarm" :face '(:foreground "CornflowerBlue")))
                  ("LOG" . ,(all-the-icons-material "comment" :face '(:foreground "tomato")))
                  ("comment" . ,(all-the-icons-material "comment" :face '(:foreground "tomato")))
                  ("today" . ,(all-the-icons-material "today" :face '(:foreground "CornflowerBlue")))
                  ("event" . ,(all-the-icons-material "event" :face '(:foreground "CornflowerBlue")))
                  ("event_available" . ,(all-the-icons-material "event_available" :face '(:foreground "CornflowerBlue")))
                  ("event_busy" . ,(all-the-icons-material "event_busy" :face '(:foreground "CornflowerBlue")))
                  ("check" . ,(all-the-icons-material "check" :face '(:foreground "CornflowerBlue")))
                  ("alert" . ,(all-the-icons-material "add_alert" :face '(:foreground "red")))
                  ("important" . ,(all-the-icons-material "priority_high" :face '(:foreground "red")))
                  ("flag" . ,(all-the-icons-material "flag" :face '(:foreground "gold")))
                  ("label" . ,(all-the-icons-material "label_outline" :face '(:foreground "gold")))
                  ("info" . ,(all-the-icons-material "info_outline" :face '(:foreground "CornflowerBlue")))
                  ("question" . ,(all-the-icons-material "help_outline" :face '(:foreground "CornflowerBlue")))
                  ("answer" . ,(all-the-icons-faicon "comments-o" :face '(:foreground "CornflowerBlue")))
                  ("example" . ,(all-the-icons-faicon "info" :face '(:foreground "CornflowerBlue")))
                  ("error" . ,(all-the-icons-material "error" :face '(:foreground "CornflowerBlue")))
                  ("quote" . ,(all-the-icons-material "format_quote" :face '(:foreground "CornflowerBlue")))
                  ("lock" . ,(all-the-icons-material "lock" :face '(:foreground "red")))
                  ("unlock" . ,(all-the-icons-material "lock_open" :face '(:foreground "LightGreen")))
                  ("key" . ,(all-the-icons-material "vpn_key" :face '(:foreground "ForestGreen")))
                  ("refresh" . ,(all-the-icons-material "refresh" :face '(:foreground "gainsboro")))
                  ("repeat" . ,(all-the-icons-material "repeat" :face '(:foreground "coral")))
                  ("shuffle" . ,(all-the-icons-material "shuffle" :face '(:foreground "coral")))
                  ("star" . ,(all-the-icons-material "star" :face '(:foreground "coral")))
                  ("heart" . ,(all-the-icons-faicon "heart-o" :face '(:foreground "red")))
                  ("brain" . ,(all-the-icons-fileicon "brain" :face '(:foreground "BlueViolet")))
                  ("smile" . ,(all-the-icons-material "tag_faces" :face '(:foreground "yellow")))
                  ("trash" . ,(all-the-icons-material "delete" :face '(:foreground "DarkOliveGreen")))
                  ("delete" . ,(all-the-icons-material "delete" :face '(:foreground "DarkOliveGreen")))
                  ("clear" . ,(all-the-icons-material "clear" :face '(:foreground "DarkOliveGreen")))
                  ("cancel" . ,(all-the-icons-material "cancel" :face '(:foreground "DarkOliveGreen")))
                  ("inprogress" . ,(all-the-icons-faicon "spinner" :face '(:foreground "cyan")))
                  ("screenshot" . ,(all-the-icons-material "crop" :face '(:foreground "cyan")))
                  ("1" . ,(all-the-icons-material "filter_1" :face '(:foreground "BlueViolet")))
                  ("2" . ,(all-the-icons-material "filter_2" :face '(:foreground "BlueViolet")))
                  ("3" . ,(all-the-icons-material "filter_3" :face '(:foreground "BlueViolet")))
                  ("4" . ,(all-the-icons-material "filter_4" :face '(:foreground "BlueViolet")))
                  ("5" . ,(all-the-icons-material "filter_5" :face '(:foreground "BlueViolet")))
                  ("6" . ,(all-the-icons-material "filter_6" :face '(:foreground "BlueViolet")))
                  ("7" . ,(all-the-icons-material "filter_7" :face '(:foreground "BlueViolet")))
                  ("8" . ,(all-the-icons-material "filter_8" :face '(:foreground "BlueViolet")))
                  ("9" . ,(all-the-icons-material "filter_9" :face '(:foreground "BlueViolet")))
                  ("10" . ,(all-the-icons-material "filter_9_plus" :face '(:foreground "BlueViolet")))
                  
                  ;; -----------------------------------------------------
                  ;; Life
                  ("forum" . ,(all-the-icons-material "forum" :face '(:foreground "NavajoWhite")))
                  ("talk" . ,(all-the-icons-faicon "comments-o" :face '(:foreground "NavajoWhite")))
                  ("call" . ,(all-the-icons-material "call" :face '(:foreground "NavajoWhite")))
                  ("voice_chat" . ,(all-the-icons-material "voice_chat" :face '(:foreground "NavajoWhite")))
                  ("user" . ,(all-the-icons-material "account_circle" :face '(:foreground "purple")))
                  ("contact" . ,(all-the-icons-material "account_box" :face '(:foreground "purple")))
                  ("person" . ,(all-the-icons-material "person" :face '(:foreground "purple")))
                  ("person_pin" . ,(all-the-icons-material "person_pin" :face '(:foreground "purple")))
                  ("group" . ,(all-the-icons-material "group" :face '(:foreground "purple")))
                  ("female" . ,(all-the-icons-faicon "female" :face '(:foreground "purple")))
                  ("male" . ,(all-the-icons-faicon "male" :face '(:foreground "purple")))
                  ("neuter" . ,(all-the-icons-faicon "neuter" :face '(:foreground "purple")))
                  ("venus" . ,(all-the-icons-faicon "venus" :face '(:foreground "purple")))
                  ("venus_double" . ,(all-the-icons-faicon "venus-double" :face '(:foreground "purple")))
                  ("venus_mars" . ,(all-the-icons-faicon "venus-mars" :face '(:foreground "purple")))
                  ("dining" . ,(all-the-icons-material "local_dining" :face '(:foreground "khaki")))
                  ("kitchen" . ,(all-the-icons-material "kitchen" :face '(:foreground "khaki")))
                  ("home" . ,(all-the-icons-material "home" :face '(:foreground "khaki")))
                  ("weekend" . ,(all-the-icons-material "weekend" :face '(:foreground "khaki")))
                  ("birthday" . ,(all-the-icons-material "cake" :face '(:foreground "khaki")))
                  ("build" . ,(all-the-icons-material "build" :face '(:foreground "khaki")))
                  ("repair" . ,(all-the-icons-material "build" :face '(:foreground "khaki")))
                  ("store" . ,(all-the-icons-material "store" :face '(:foreground "khaki")))
                  ("shopping" . ,(all-the-icons-material "shopping_cart" :face '(:foreground "khaki")))
                  ("express" . ,(all-the-icons-material "local_shipping" :face '(:foreground "PaleTurquoise")))
                  ("money" . ,(all-the-icons-faicon "money" :face '(:foreground "green")))
                  ("payment" . ,(all-the-icons-material "payment" :face '(:foreground "CornflowerBlue")))
                  ("credit_card" . ,(all-the-icons-material "credit_card" :face '(:foreground "CornflowerBlue")))
                  ("visa" . ,(all-the-icons-faicon "cc-visa" :face '(:foreground "CornflowerBlue")))
                  ("mastercard" . ,(all-the-icons-faicon "cc-mastercard" :face '(:foreground "CornflowerBlue")))
                  ("PayPal" . ,(all-the-icons-faicon "paypal" :face '(:foreground "CornflowerBlue")))
                  ("stripe" . ,(all-the-icons-faicon "cc-stripe" :face '(:foreground "CornflowerBlue")))
                  ("gratipay" . ,(all-the-icons-faicon "gratipay" :face '(:foreground "CornflowerBlue")))
                  ("digital_currency" . ,(all-the-icons-faicon "btc" :face '(:foreground "gold")))
                  ("btc" . ,(all-the-icons-faicon "btc" :face '(:foreground "gold")))
                  ("bitcoin" . ,(all-the-icons-faicon "btc" :face '(:foreground "gold")))
                  ;; ("ethereum" . ,(all-the-icons-faicon "" :face '(:foreground "LightSkyBlue")))
                  ("watch" . ,(all-the-icons-faicon "eye" :face '(:foreground "LightGoldenrod")))
                  ("hospital" . ,(all-the-icons-material "local_hospital" :face '(:foreground "LightGray")))
                  ("library" . ,(all-the-icons-material "local_library" :face '(:foreground "LightGray")))
                  ("bank" . ,(all-the-icons-material "account_balance" :face '(:foreground "LightGray")))
                  ("ATM" . ,(all-the-icons-material "local_atm" :face '(:foreground "LightGray")))
                  ("hotel" . ,(all-the-icons-material "local_hotel" :face '(:foreground "LightGray")))
                  ("spa" . ,(all-the-icons-material "spa" :face '(:foreground "LightGray")))
                  ("laundry" . ,(all-the-icons-material "local_laundry_service" :face '(:foreground "LightGray")))
                  ("pets" . ,(all-the-icons-material "pets" :face '(:foreground "LightGray")))
                  ("florist" . ,(all-the-icons-material "local_florist" :face '(:foreground "LightGray")))
                  ("play" . ,(all-the-icons-material "local_play" :face '(:foreground "LightGray")))
                  ("city" . ,(all-the-icons-material "location_city" :face '(:foreground "LightGray")))
                  ("industry" . ,(all-the-icons-faicon "industry" :face '(:foreground "peru")))
                  ("see_doctor" . ,(all-the-icons-faicon "stethoscope" :face '(:foreground "LightGray")))
                  ("doctor" . ,(all-the-icons-faicon "user-md" :face '(:foreground "LightGray")))
                  ("medical" . ,(all-the-icons-faicon "medkit" :face '(:foreground "LightGray")))
                  ("healing" . ,(all-the-icons-material "healing" :face '(:foreground "LightGray")))
                  ("health" . ,(all-the-icons-faicon "medkit" :face '(:foreground "LightGray")))
                  ("law" . ,(all-the-icons-material "gavel" :face '(:foreground "LightGray")))
                  ("government" . ,(all-the-icons-faicon "building-o" :face '(:foreground "LightGray")))
                  ("school" . ,(all-the-icons-material "school" :face '(:foreground "black")))
                  ("censorship" . ,(all-the-icons-faicon "assistive-listening-systems" :face '(:foreground "OrangeRed")))
                  ("map" . ,(all-the-icons-material "map" :face '(:foreground "RosyBrown")))
                  ("map_pin" . ,(all-the-icons-material "pin_drop" :face '(:foreground "RosyBrown")))
                  ("street_view" . ,(all-the-icons-faicon "street-view" :face '(:foreground "RosyBrown")))
                  ("location" . ,(all-the-icons-material "my_location" :face '(:foreground "RosyBrown")))
                  ("beenhere" . ,(all-the-icons-material "beenhere" :face '(:foreground "RosyBrown")))
                  ("bar" . ,(all-the-icons-material "local_bar" :face '(:foreground "LightGray")))
                  ("drink" . ,(all-the-icons-material "local_drink" :face '(:foreground "yellow")))
                  ("coffee" . ,(all-the-icons-material "local_cafe" :face '(:foreground "RosyBrown")))
                  ("bicycle" . ,(all-the-icons-material "directions_bike" :face '(:foreground "LightGray")))
                  ("car" . ,(all-the-icons-material "directions_car" :face '(:foreground "LightGray")))
                  ("traffic" . ,(all-the-icons-material "traffic" :face '(:foreground "LightGray")))
                  ("parking" . ,(all-the-icons-material "local_parking" :face '(:foreground "LightGray")))
                  ("bus" . ,(all-the-icons-material "directions_bus" :face '(:foreground "LightGray")))
                  ("taxi" . ,(all-the-icons-material "local_taxi" :face '(:foreground "LightGray")))
                  ("subway" . ,(all-the-icons-material "directions_subway" :face '(:foreground "LightGray")))
                  ("railway" . ,(all-the-icons-material "directions_railway" :face '(:foreground "LightGray")))
                  ("train" . ,(all-the-icons-material "train" :face '(:foreground "LightGray")))
                  ("tram" . ,(all-the-icons-material "tram" :face '(:foreground "LightGray")))
                  ("flight" . ,(all-the-icons-material "flight" :face '(:foreground "LightGray")))
                  ("ship" . ,(all-the-icons-material "directions_boat" :face '(:foreground "LightGray")))
                  ("run" . ,(all-the-icons-material "directions_run" :face '(:foreground "LightGray")))
                  ("walk" . ,(all-the-icons-material "directions_walk" :face '(:foreground "LightGray")))
                  ("travel" . ,(all-the-icons-material "card_travel" :face '(:foreground "LightSeaGreen")))
                  ("child" . ,(all-the-icons-material "child_care" :face '(:foreground "LightGoldenrod")))
                  ("recycle" . ,(all-the-icons-faicon "recycle" :face '(:foreground "LimeGreen")))
                  
                  ;; -----------------------------------------------------
                  ;; computer
                  ("file" . ,(all-the-icons-faicon "file-text-o" :face '(:foreground "LightGray")))
                  ("archive_file" . ,(all-the-icons-faicon "file-archive-o" :face '(:foreground "LightGray")))
                  ("document" . ,(all-the-icons-faicon "file-text-o" :face '(:foreground "LightGray")))
                  ("Markdown" . ,(all-the-icons-fileicon "markdownlint" :face '(:foreground "LightGray")))
                  ("AsciiDoc" . ,(all-the-icons-fileicon "asciidoc" :face '(:foreground "LightGray")))
                  ("reStructure" . ,(all-the-icons-fileicon "rst" :face '(:foreground "LightGray")))
                  ("OneNote" . ,(all-the-icons-fileicon "onenote" :face '(:foreground "BlueViolet")))
                  ("slideshow" . ,(all-the-icons-material "slideshow" :face '(:foreground "IndianRed")))
                  ("word" . ,(all-the-icons-fileicon "word" :face '(:foreground "SteelBlue")))
                  ("excel" . ,(all-the-icons-fileicon "excel" :face '(:foreground "ForestGreen")))
                  ("powerpoint" . ,(all-the-icons-fileicon "powerpoint" :face '(:foreground "IndianRed")))
                  ("keynote" . ,(all-the-icons-fileicon "keynote" :face '(:foreground "LightGray")))
                  ("access" . ,(all-the-icons-fileicon "access" :face '(:foreground "IndianRed")))
                  ("pdf" . ,(all-the-icons-faicon "file-pdf-o" :face '(:foreground "LightCoral")))
                  ("image" . ,(all-the-icons-faicon "file-image-o" :face '(:foreground "LightGray")))
                  ("video" . ,(all-the-icons-faicon "file-video-o" :face '(:foreground "LightGray")))
                  ("audio" . ,(all-the-icons-faicon "file-audio-o" :face '(:foreground "LightGray")))
                  ("movie" . ,(all-the-icons-material "movie" :face '(:foreground "LightGray")))
                  ("book" . ,(all-the-icons-octicon "book" :face '(:foreground "LightGray")))
                  ("bookmark" . ,(all-the-icons-material "bookmark" :face '(:foreground "LightGray")))
                  ("plot" . ,(all-the-icons-faicon "bar-chart" :face '(:foreground "chartreuse")))
                  ("diagram" . ,(all-the-icons-faicon "line-chart" :face '(:foreground "chartreuse")))
                  ("line_chart" . ,(all-the-icons-faicon "line-chart" :face '(:foreground "chartreuse")))
                  ("area_chart" . ,(all-the-icons-faicon "area-chart" :face '(:foreground "chartreuse")))
                  ("pie_chart" . ,(all-the-icons-faicon "pie-chart" :face '(:foreground "chartreuse")))
                  ("note" . ,(all-the-icons-material "note" :face '(:foreground "DarkCyan")))
                  ("paperclip" . ,(all-the-icons-faicon "paperclip" :face '(:foreground "DarkCyan")))
                  ("search" . ,(all-the-icons-material "search" :face '(:foreground "DeepSkyBlue")))
                  ("download" . ,(all-the-icons-faicon "download" :face '(:foreground "gray")))
                  ("upload" . ,(all-the-icons-faicon "upload" :face '(:foreground "gold")))
                  ("link" . ,(all-the-icons-material "link" :face '(:foreground "DeepSkyBlue")))
                  ("cloud" . ,(all-the-icons-material "cloud" :face '(:foreground "DeepSkyBlue")))
                  ("email" . ,(all-the-icons-material "mail_outline" :face '(:foreground "DeepSkyBlue")))
                  ("reply" . ,(all-the-icons-material "reply" :face '(:foreground "DeepSkyBlue")))
                  ("share" . ,(all-the-icons-material "share" :face '(:foreground "DeepSkyBlue")))
                  ("screen_share" . ,(all-the-icons-material "screen_share" :face '(:foreground "DeepSkyBlue")))
                  ("cast" . ,(all-the-icons-material "cast" :face '(:foreground "DeepSkyBlue")))
                  ("send" . ,(all-the-icons-material "send" :face '(:foreground "LightGray")))
                  ("rss" . ,(all-the-icons-material "rss_feed" :face '(:foreground "DeepSkyBlue")))
                  ("picture" . ,(all-the-icons-material "image" :face '(:foreground "LimeGreen")))
                  ("photo" . ,(all-the-icons-material "photo" :face '(:foreground "LimeGreen")))
                  ("music" . ,(all-the-icons-material "music_note" :face '(:foreground "LightSkyBlue")))
                  ("headphone" . ,(all-the-icons-material "headset" :face '(:foreground "LightSkyBlue")))
                  ("hearing" . ,(all-the-icons-material "hearing" :face '(:foreground "LightSkyBlue")))
                  ("film" . ,(all-the-icons-material "local_movies" :face '(:foreground "DarkCyan")))
                  ("game" . ,(all-the-icons-faicon "gamepad" :face '(:foreground "CadetBlue")))
                  ("steam" . ,(all-the-icons-faicon "steam" :face '(:foreground "CadetBlue")))
                  ("camera" . ,(all-the-icons-material "photo_camera" :face '(:foreground "DarkSeaGreen")))
                  ("vlog" . ,(all-the-icons-material "videocam" :face '(:foreground "DarkSeaGreen")))
                  ("mic" . ,(all-the-icons-material "mic" :face '(:foreground "black")))
                  ("record" . ,(all-the-icons-faicon "microphone" :face '(:foreground "DarkSeaGreen")))
                  ("news" . ,(all-the-icons-faicon "newspaper-o" :face '(:foreground "GreenYellow")))
                  
                  ;; Family
                  ("@family" . ,(all-the-icons-material "home" :face '(:foreground "DarkKhaki")))
                  
                  ;; Work
                  ("work" . ,(all-the-icons-faicon "black-tie" :face '(:foreground "DodgerBlue")))
                  ("print" . ,(all-the-icons-material "print" :face '(:foreground "SkyBlue")))
                  ("business_trip" . ,(all-the-icons-faicon "briefcase" :face '(:foreground "DarkTurquoise")))
                  
                  ;; Company
                  ("users" . ,(all-the-icons-faicon "users" :face '(:foreground "gainsboro")))
                  ("promotion" . ,(all-the-icons-faicon "bullhorn" :face '(:foreground "LightGreen")))
                  
                  ;; Investing & Finance
                  ("accounting" . ,(all-the-icons-material "account_balance_wallet" :face '(:foreground "SeaGreen")))
                  ("finance" . ,(all-the-icons-material "account_balance_wallet" :face '(:foreground "SeaGreen")))
                  ("stock" . ,(all-the-icons-faicon "money" :face '(:foreground "SeaGreen")))
                  ;; philosophy
                  ("daoism" . ,(all-the-icons-fileicon "yin-yang" :face '(:foreground "DimGray")))
                  ;; society
                  ("tree" . ,(all-the-icons-faicon "tree" :face '(:foreground "ForestGreen")))
                  ("empire" . ,(all-the-icons-faicon "empire" :face '(:foreground "gold")))
                  ("global" . ,(all-the-icons-faicon "globe" :face '(:foreground "SkyBlue")))))))

(defun org-tag-beautify-set-programming-tag-icons ()
  "Display programming tag as icon."
  (setq org-pretty-tags-surrogate-strings
        (append org-pretty-tags-surrogate-strings
                `(("programming" . ,(all-the-icons-material "developer_board" :face '(:foreground "LightSlateBlue")))
                  ("code" . ,(all-the-icons-material "code" :face '(:foreground "cyan")))
                  ("source_code" . ,(all-the-icons-faicon "file-code-o" :face '(:foreground "cyan")))
                  ("bug" . ,(all-the-icons-material "bug_report" :face '(:foreground "red")))
                  ("vulnerability" . ,(all-the-icons-faicon "bug" :face '(:foreground "OrangeRed")))
                  ("patch" . ,(all-the-icons-fileicon "patch" :face '(:foreground "orange")))
                  ("diff" . ,(all-the-icons-fileicon "diff" :face '(:foreground "black")))
                  ("coding" . ,(all-the-icons-material "keyboard" :face '(:foreground "cyan")))
                  ("regex" . ,(all-the-icons-fileicon "regex" :face '(:foreground "GreenYellow")))
                  ("extension" . ,(all-the-icons-material "extension" :face '(:foreground "ForestGreen")))
                  ("git" . ,(all-the-icons-faicon "git" :face '(:foreground "OrangeRed")))
                  ("database" . ,(all-the-icons-faicon "database" :face '(:foreground "CornflowerBlue")))
                  ("computer" . ,(all-the-icons-material "computer" :face '(:foreground "LightSkyBlue")))
                  ("laptop" . ,(all-the-icons-material "laptop" :face '(:foreground "LightSkyBlue")))
                  ("mobile" . ,(all-the-icons-material "smartphone" :face '(:foreground "SkyBlue")))
                  ("smartphone" . ,(all-the-icons-material "smartphone" :face '(:foreground "SkyBlue")))
                  ("phone" . ,(all-the-icons-material "phone" :face '(:foreground "SkyBlue")))
                  ("router" . ,(all-the-icons-material "router" :face '(:foreground "SkyBlue")))
                  ("fax" . ,(all-the-icons-faicon "fax" :face '(:foreground "DarkSlateBlue")))
                  ("scanner" . ,(all-the-icons-material "scanner" :face '(:foreground "SkyBlue")))
                  ("TV" . ,(all-the-icons-material "live_tv" :face '(:foreground "SkyBlue")))
                  ("cmcc" . ,(all-the-icons-fileicon "ecere" :face '(:foreground "SkyBlue"))) ; CMCC 中国移动
                  ("hardware" . ,(all-the-icons-material "devices_other" :face '(:foreground "SkyBlue")))
                  ("server" . ,(all-the-icons-faicon "server" :face '(:foreground "SkyBlue")))
                  ("NAS" . ,(all-the-icons-faicon "server" :face '(:foreground "SkyBlue")))
                  ("robot" . ,(all-the-icons-fileicon "robot" :face '(:foreground "SteelBlue")))
                  ("usb" . ,(all-the-icons-material "usb" :face '(:foreground "SteelBlue")))
                  ("WiFi" . ,(all-the-icons-material "wifi" :face '(:foreground "DarkGray")))
                  ("bluetooth" . ,(all-the-icons-material "bluetooth" :face '(:foreground "DarkGray")))
                  ("Nvidia" . ,(all-the-icons-fileicon "nvidia" :face '(:foreground "SteelBlue")))
                  ("Firefox" . ,(all-the-icons-faicon "firefox" :face '(:foreground "OrangeRed")))
                  ("Chromium" . ,(all-the-icons-faicon "chrome" :face '(:foreground "LightSkyBlue")))
                  ("Chrome" . ,(all-the-icons-faicon "chrome" :face '(:foreground "OrangeRed")))
                  ("Edge" . ,(all-the-icons-fileicon "edge" :face '(:foreground "DodgerBlue")))
                  ("Safari" . ,(all-the-icons-faicon "safari" :face '(:foreground "LightSkyBlue")))
                  ("terminal" . ,(all-the-icons-fileicon "terminal" :face '(:foreground "black")))
                  ("command" . ,(all-the-icons-fileicon "terminal" :face '(:foreground "MediumSeaGreen")))
                  ("ssh" . ,(all-the-icons-fileicon "terminal" :face '(:foreground "SteelBlue")))
                  ("powershell" . ,(all-the-icons-fileicon "powershell" :face '(:foreground "RoyalBlue")))
                  ("CMake" . ,(all-the-icons-fileicon "cmake" :face '(:foreground "CornflowerBlue")))
                  ("Tcl" . ,(all-the-icons-fileicon "tcl" :face '(:foreground "SteelBlue")))
                  ("Jupyter" . ,(all-the-icons-fileicon "jupyter" :face '(:foreground "DarkOrange")))
                  ("Finder" . ,(all-the-icons-fileicon "finder" :face '(:foreground "gray")))
                  ("FFmpeg" . ,(all-the-icons-fileicon "ffmpeg" :face '(:foreground "MediumSeaGreen")))
                  ("Cloud" . ,(all-the-icons-faicon "cloud" :face '(:foreground "gray")))
                  ("DevOps" . ,(all-the-icons-faicon "cogs" :face '(:foreground "tomato"))) ; "sitemap"
                  ("Docker" . ,(all-the-icons-fileicon "dockerfile" :face '(:foreground "DodgerBlue")))
                  ("Dockerfile" . ,(all-the-icons-fileicon "dockerfile" :face '(:foreground "DodgerBlue")))
                  ("Vagrant" . ,(all-the-icons-fileicon "vagrant" :face '(:foreground "RoyalBlue")))
                  ("Ansible" . ,(all-the-icons-fileicon "ansible" :face '(:foreground "OrangeRed")))
                  ("Puppet" . ,(all-the-icons-fileicon "puppet" :face '(:foreground "OrangeRed")))
                  ("Terraform" . ,(all-the-icons-fileicon "terraform" :face '(:foreground "CornflowerBlue")))
                  ("Nix" . ,(all-the-icons-fileicon "nix" :face '(:foreground "chocolate")))
                  ("settings" . ,(all-the-icons-material "settings" :face '(:foreground "ForestGreen")))
                  ("security" . ,(all-the-icons-material "security" :face '(:foreground "ForestGreen")))
                  ("hacker" . ,(all-the-icons-faicon "user-secret" :face '(:foreground "DimGray")))
                  ("Nmap" . ,(all-the-icons-fileicon "nmap" :face '(:foreground "LightBlue")))
                  ("forensic" . ,(all-the-icons-material "loupe" :face '(:foreground "DodgerBlue")))
                  ("computer_forensic" .
                   ,(all-the-icons-material "important_devices" :face '(:foreground "DodgerBlue")))
                  ("disk" . ,(all-the-icons-material "disc_full" :face '(:foreground "DarkKhaki")))
                  ("save" . ,(all-the-icons-material "save" :face '(:foreground "orange")))
                  ("sync" . ,(all-the-icons-material "sync" :face '(:foreground "orange")))
                  ("backup" . ,(all-the-icons-material "backup" :face '(:foreground "orange")))
                  ("restore" . ,(all-the-icons-material "restore" :face '(:foreground "orange")))
                  ("Arduino" . ,(all-the-icons-fileicon "arduino" :face '(:foreground "SkyBlue")))
                  ("Blender" . ,(all-the-icons-fileicon "blender" :face '(:foreground "orange")))
                  ("Processing" . ,(all-the-icons-fileicon "processing" :face '(:foreground "blue")))
                  ("Godot" . ,(all-the-icons-fileicon "godot" :face '(:foreground "orange")))
                  ;; -----------------------------------------------------
                  ;; Softwares
                  ("Nginx" . ,(all-the-icons-fileicon "nginx" :face '(:foreground "DarkTurquoise")))
                  ("Apache" . ,(all-the-icons-alltheicon "apache" :face '(:foreground "goldenrod")))
                  ("libuv" . ,(all-the-icons-fileicon "libuv" :face '(:foreground "LightSeaGreen")))
                  ("LLVM" . ,(all-the-icons-fileicon "llvm" :face '(:foreground "RoyalBlue")))
                  ("GDB" . ,(all-the-icons-fileicon "gdb" :face '(:foreground "coral")))
                  ("font" . ,(all-the-icons-faicon "font" :face '(:foreground "LightGray")))
                  ("Electron" . ,(all-the-icons-fileicon "electron" :face '(:foreground "gold")))
                  ("Xamarin" . ,(all-the-icons-fileicon "xamarin" :face '(:foreground "LightSkyBlue")))
                  ("Ionic" . ,(all-the-icons-fileicon "ionic-project" :face '(:foreground "CornflowerBlue")))
                  ;; Adobe softwares
                  ("AdobePhotoshop" . ,(all-the-icons-fileicon "ps" :face '(:foreground "RoyalBlue")))
                  ("AdobePremiere" . ,(all-the-icons-fileicon "premiere" :face '(:foreground "DarkMagenta")))
                  ("AdobeAfterEffect" . ,(all-the-icons-fileicon "ae" :face '(:foreground "DarkViolet")))
                  ("AdobeIllustrator" . ,(all-the-icons-fileicon "ai" :face '(:foreground "orange")))
                  ("AdobeInDesign" . ,(all-the-icons-fileicon "id" :face '(:foreground "DarkOrange")))
                  ("Blender" . ,(all-the-icons-fileicon "blender" :face '(:foreground "DarkOrange")))
                  ("Maya" . ,(all-the-icons-fileicon "maya" :face '(:foreground "LightSkyBlue")))
                  ;; ("CAD" . ,(all-the-icons-fileicon "kicad" :face '(:foreground "LightSkyBlue")))
                  ("CAD" . ,(all-the-icons-fileicon "openscad" :face '(:foreground "LightSkyBlue")))
                  ("Labview" . ,(all-the-icons-fileicon "labview" :face '(:foreground "DarkTurquoise")))
                  ("Audacity" . ,(all-the-icons-fileicon "audacity" :face '(:foreground "SandyBrown")))
                  ("Sketch" . ,(all-the-icons-fileicon "sketch" :face '(:foreground "DarkOrange")))
                  ("Sketchup" . ,(all-the-icons-fileicon "sketchup-layout" :face '(:foreground "DarkOrange")))
                  ("paint" . ,(all-the-icons-faicon "paint-brush" :face '(:foreground "LightSkyBlue")))
                  ("AutoIt" . ,(all-the-icons-fileicon "autoit" :face '(:foreground "LightSkyBlue")))
                  ("AutoHotKey" . ,(all-the-icons-fileicon "auto-hotkey" :face '(:foreground "MediumSeaGreen")))
                  ;; -----------------------------------------------------
                  ;; Systems
                  ("Linux" . ,(all-the-icons-faicon "linux" :face '(:foreground "DarkGray")))
                  ("Arch_Linux" . ,(all-the-icons-fileicon "arch-linux" :face '(:foreground "LightSkyBlue")))
                  ("Gentoo" . ,(all-the-icons-fileicon "gentoo" :face '(:foreground "YellowGreen")))
                  ("Alpine" . ,(all-the-icons-fileicon "alpine-linux" :face '(:foreground "DarkTurquoise")))
                  ("Apple" . ,(all-the-icons-faicon "apple" :face '(:foreground "LightGray")))
                  ("macOS" . ,(all-the-icons-faicon "apple" :face '(:foreground "LightGray")))
                  ("Windows" . ,(all-the-icons-faicon "windows" :face '(:foreground "RoyalBlue")))
                  ("Android" . ,(all-the-icons-material "android" :face '(:foreground "MediumSeaGreen")))
                  ("iOS" . ,(all-the-icons-faicon "apple" :face '(:foreground "LightGray")))
                  ("adb" . ,(all-the-icons-material "adb" :face '(:foreground "MediumSeaGreen")))
                  ("VirtualBox" . ,(all-the-icons-fileicon "virtualbox" :face '(:foreground "CornflowerBlue")))
                  ("VMWare" . ,(all-the-icons-fileicon "vmware" :face '(:foreground "SandyBrown")))
                  ("man" . ,(all-the-icons-fileicon "man-page" :face '(:foreground "gray")))
                  ("config" . ,(all-the-icons-fileicon "config" :face '(:foreground "gray")))
                  ;; -----------------------------------------------------
                  ;; Programming Languages
                  ("Shell" . ,(all-the-icons-alltheicon "script" :face '(:foreground "DeepSkyBlue")))
                  ("LISP" . ,(all-the-icons-fileicon "lisp" :face '(:foreground "OrangeRed")))
                  ("Common_Lisp" . ,(all-the-icons-fileicon "clisp" :face '(:foreground "black")))
                  ("Emacs_Lisp" . ,(all-the-icons-fileicon "elisp" :face '(:foreground "RoyalBlue")))
                  ("Clojure" . ,(all-the-icons-alltheicon "clojure-line" :v-adjust -0.05 :face '(:foreground "DeepSkyBlue")))
                  ("ClojureScript" . ,(all-the-icons-fileicon "cljs" :v-adjust -0.01 :face '(:foreground "DeepSkyBlue")))
                  ("Scheme" . ,(all-the-icons-fileicon "scheme" :face '(:foreground "LightBlue")))
                  ("Racket" . ,(all-the-icons-fileicon "racket" :face '(:foreground "DarkOrange")))
                  ("Python" . ,(all-the-icons-alltheicon "python" :face '(:foreground "orange")))
                  ("Cython" . ,(all-the-icons-fileicon "cython" :face '(:foreground "orange")))
                  ("Haskell" . ,(all-the-icons-alltheicon "haskell" :face '(:foreground "orange")))
                  ("Julia" . ,(all-the-icons-fileicon "julia" :face '(:foreground "LightCoral")))
                  ("C" . ,(all-the-icons-alltheicon "c-line" :face '(:foreground "CornflowerBlue")))
                  ("cpp" . ,(all-the-icons-alltheicon "cplusplus-line" :face '(:foreground "CornflowerBlue")))
                  ("C#" . ,(all-the-icons-alltheicon "csharp-line" :face '(:foreground "CornflowerBlue")))
                  ;; ("C#" . ,(all-the-icons-fileicon "cs-script" :face '(:foreground "CornflowerBlue")))
                  ("F#" . ,(all-the-icons-fileicon "fsharp" :face '(:foreground "CornflowerBlue")))
                  ("nuget" . ,(all-the-icons-fileicon "nuget" :face '(:foreground "CornflowerBlue")))
                  ("Java" . ,(all-the-icons-alltheicon "java" :face '(:foreground "OrangeRed")))
                  ("Gradle" . ,(all-the-icons-fileicon "gradle" :face '(:foreground "orange")))
                  ("Groovy" . ,(all-the-icons-fileicon "groovy" :face '(:foreground "orange")))
                  ;; ("Scala" . ,(all-the-icons-fileicon "" :face '(:foreground "DarkBlue")))
                  ("Kotlin" . ,(all-the-icons-fileicon "kotlin" :face '(:foreground "DarkSlateBlue")))
                  ("Go" . ,(all-the-icons-fileicon "go" :face '(:foreground "LightSkyBlue")))
                  ("Rust" . ,(all-the-icons-alltheicon "rust" :face '(:foreground "black")))
                  ("Swift" . ,(all-the-icons-alltheicon "swift" :face '(:foreground "CornflowerBlue")))
                  ("R" . ,(all-the-icons-fileicon "R" :face '(:foreground "RoyalBlue")))
                  ("Octave" . ,(all-the-icons-fileicon "octave" :face '(:foreground "SteelBlue")))
                  ("Matlab" . ,(all-the-icons-fileicon "matlab" :face '(:foreground "LightSlateBlue")))
                  ("Mathematica" . ,(all-the-icons-fileicon "mathematica" :face '(:foreground "OrangeRed")))
                  ("Sage" . ,(all-the-icons-fileicon "sage" :face '(:foreground "tomato")))
                  ("Delphi" . ,(all-the-icons-fileicon "delphi" :face '(:foreground "OrangeRed")))
                  ("OCaml" . ,(all-the-icons-fileicon "ocaml" :face '(:foreground "OrangeRed")))
                  ("Fortran" . ,(all-the-icons-fileicon "fortran" :face '(:foreground "chocolate")))
                  ("Coq" . ,(all-the-icons-fileicon "coq" :face '(:foreground "OliveDrab")))
                  ("Ruby" . ,(all-the-icons-alltheicon "ruby" :face '(:foreground "red")))
                  ("MRuby" . ,(all-the-icons-fileicon "mruby" :face '(:foreground "red")))
                  ("RDoc" . ,(all-the-icons-fileicon "rdoc" :face '(:foreground "red")))
                  ("PHP" . ,(all-the-icons-fileicon "php" :face '(:foreground "LightSkyBlue")))
                  ("Perl" . ,(all-the-icons-alltheicon "perl" :face '(:foreground "LightSkyBlue")))
                  ("CPAN" . ,(all-the-icons-fileicon "cpan" :face '(:foreground "LightSkyBlue")))
                  ("Lua" . ,(all-the-icons-fileicon "lua" :face '(:foreground "LightSkyBlue")))
                  ("Io" . ,(all-the-icons-fileicon "io" :face '(:foreground "RoyalBlue")))
                  ("Web" . ,(all-the-icons-material "web" :face '(:foreground "tomato")))
                  ("design" . ,(all-the-icons-material "palette" :face '(:foreground "tomato")))
                  ("JavaScript" . ,(all-the-icons-alltheicon "javascript" :face '(:foreground "DarkOrange")))
                  ("nodejs" . ,(all-the-icons-alltheicon "nodejs" :face '(:foreground "")))
                  ("npm" . ,(all-the-icons-fileicon "npm" :face '(:foreground "OrangeRed")))
                  ("TypeScript" . ,(all-the-icons-fileicon "typescript" :face '(:foreground "CornflowerBlue")))
                  ("tsx" . ,(all-the-icons-fileicon "tsx" :face '(:foreground "CornflowerBlue")))
                  ("jsx" . ,(all-the-icons-fileicon "jsx-2" :face '(:foreground "DarkOrange")))
                  ("WebAssembly" . ,(all-the-icons-fileicon "wasm" :face '(:foreground "SteelBlue")))
                  ("HTML" . ,(all-the-icons-alltheicon "html5" :face '(:foreground "tomato")))
                  ("HTML5" . ,(all-the-icons-alltheicon "html5" :face '(:foreground "tomato")))
                  ("CSS" . ,(all-the-icons-alltheicon "css3" :face '(:foreground "LightSkyBlue")))
                  ("CSS3" . ,(all-the-icons-alltheicon "css3" :face '(:foreground "LightSkyBlue")))
                  ("SQL" . ,(all-the-icons-faicon "database" :face '(:foreground "RoyalBlue")))
                  ("SQLite" . ,(all-the-icons-fileicon "sqlite" :face '(:foreground "RoyalBlue")))
                  ("PostgreSQL" . ,(all-the-icons-alltheicon "postgresql" :face '(:foreground "RoyalBlue")))
                  ("Firebase" . ,(all-the-icons-fileicon "firebase" :face '(:foreground "coral")))
                  ("TeX" . ,(all-the-icons-fileicon "tex" :face '(:foreground "DimGray")))
                  ("LaTeX" . ,(all-the-icons-fileicon "tex" :face '(:foreground "")))
                  ("MathJax" . ,(all-the-icons-fileicon "mathjax" :face '(:foreground "CornflowerBlue")))
                  ("Shen" . ,(all-the-icons-fileicon "shen" :face '(:foreground "DarkSlateBlue")))
                  ("Hacklang" . ,(all-the-icons-fileicon "hack" :face '(:foreground "DarkGray")))
                  ("VHDL" . ,(all-the-icons-fileicon "vhdl" :face '(:foreground "DarkGray")))
                  ("Verilog" . ,(all-the-icons-fileicon "verilog" :face '(:foreground "firebrick")))
                  ("Spring" . ,(all-the-icons-alltheicon "spring" :face '(:foreground "SpringGreen")))
                  ("Redux" . ,(all-the-icons-fileicon "redux" :face '(:foreground "SandyBrown")))
                  ("AWS" . ,(all-the-icons-alltheicon "aws" :face '(:foreground "CornflowerBlue")))
                  ("Kivy" . ,(all-the-icons-fileicon "kivy" :face '(:foreground "LightCoral")))
                  ("JSON" . ,(all-the-icons-fileicon "jsonld" :face '(:foreground "LightCoral")))
                  ("GraphQL" . ,(all-the-icons-fileicon "graphql" :face '(:foreground "LightSkyBlue")))
                  ("OpenGL" . ,(all-the-icons-fileicon "opengl" :face '(:foreground "CornflowerBlue")))
                  ("OpenCL" . ,(all-the-icons-fileicon "opencl" :face '(:foreground "CornflowerBlue")))
                  ("WebGL" . ,(all-the-icons-fileicon "webgl" :face '(:foreground "CornflowerBlue")))
                  ("Boot" . ,(all-the-icons-fileicon "build-boot" :face '(:foreground "OliveDrab")))
                  ("bundler" . ,(all-the-icons-fileicon "bundler" :face '(:foreground "chocolate")))
                  ("Graphviz" . ,(all-the-icons-fileicon "graphviz" :face '(:foreground "LightGoldenrod")))
                  ("dylib" . ,(all-the-icons-fileicon "dylib" :face '(:foreground "yellow")))
                  ("V8" . ,(all-the-icons-fileicon "v8" :face '(:foreground "orange")))
                  ("webpack" . ,(all-the-icons-fileicon "webpack-old" :face '(:foreground "DeepSkyBlue")))
                  ("Grunt" . ,(all-the-icons-fileicon "grunt" :face '(:foreground "orange")))
                  ("Gulp" . ,(all-the-icons-fileicon "gulp" :face '(:foreground "orange")))
                  ("Vue" . ,(all-the-icons-fileicon "vue" :face '(:foreground "chartreuse")))
                  ("reason" . ,(all-the-icons-fileicon "reason" :face '(:foreground "DeepSkyBlue")))
                  ("D3js" . ,(all-the-icons-fileicon "d3" :face '(:foreground "salmon")))
                  ("chartjs" . ,(all-the-icons-fileicon "chartjs" :face '(:foreground "tomato")))
                  ("Hoplon" . ,(all-the-icons-fileicon "hoplon" :face '(:foreground "DarkSalmon")))
                  ("Solidity" . ,(all-the-icons-fileicon "solidity" :face '(:foreground "black")))
                  ("API" . ,(all-the-icons-fileicon "api-blueprint" :face '(:foreground "LightGray")))
                  ;; -----------------------------------------------------
                  ;; Testing
                  ;; ("" . ,(all-the-icons-fileicon "test-dir" :face '(:foreground "DarkCyan")))
                  ;; ("" . ,(all-the-icons-fileicon "test-genertic" :face '(:foreground "DarkCyan")))
                  ;; ("" . ,(all-the-icons-fileicon "test-js" :face '(:foreground "DarkCyan")))
                  ;; ("" . ,(all-the-icons-fileicon "test-typescript" :face '(:foreground "DarkCyan")))
                  ;; ("" . ,(all-the-icons-fileicon "test-coffeescript" :face '(:foreground "DarkCyan")))
                  ;; ("" . ,(all-the-icons-fileicon "test-react" :face '(:foreground "DarkCyan")))
                  ;; ("" . ,(all-the-icons-fileicon "test-python" :face '(:foreground "DarkCyan")))
                  ;; ("" . ,(all-the-icons-fileicon "test-ruby" :face '(:foreground "DarkCyan")))
                  ;; ("" . ,(all-the-icons-fileicon "test-perl" :face '(:foreground "DarkCyan")))
                  ;; ("" . ,(all-the-icons-fileicon "phpunit" :face '(:foreground "DarkCyan")))
                  ;; -----------------------------------------------------
                  ;; Open Source
                  ("GNU" . ,(all-the-icons-fileicon "gnu" :face '(:foreground "gray")))
                  ("free" . ,(all-the-icons-fileicon "freemarker" :face '(:foreground "gray")))
                  ;; ("license" . ,(all-the-icons-faicon "" :face '(:foreground "SteelBlue")))
                  ("copyright" . ,(all-the-icons-material "copyright" :face '(:foreground "SteelBlue")))
                  ("registered" . ,(all-the-icons-faicon "registered" :face '(:foreground "gold")))
                  ("CC" . ,(all-the-icons-faicon "cc" :face '(:foreground "gray")))
                  ;; -----------------------------------------------------
                  ;; Project
                  ("@project" . ,(all-the-icons-faicon "bolt" :face '(:foreground "yellow")))))))

(defun org-tag-beautify-set-internet-company-tag-icons ()
  "Display internet company name tag as icon."
  (setq org-pretty-tags-surrogate-strings
        (append org-pretty-tags-surrogate-strings
                `(("Internet" . ,(all-the-icons-faicon "globe" :face '(:foreground "SkyBlue")))
                  ("Google" . ,(all-the-icons-faicon "google" :face '(:foreground "OrangeRed")))
                  ("Windows" . ,(all-the-icons-faicon "windows" :face '(:foreground "DodgerBlue")))
                  ("Microsoft" . ,(all-the-icons-faicon "windows" :face '(:foreground "DodgerBlue")))
                  ("Facebook" . ,(all-the-icons-faicon "facebook-official" :face '(:foreground "DodgerBlue")))
                  ("Twitter" . ,(all-the-icons-faicon "twitter" :face '(:foreground "DarkTurquoise")))
                  ("Amazon" . ,(all-the-icons-faicon "amazon" :face '(:foreground "goldenrod")))
                  ("Reddit" . ,(all-the-icons-faicon "reddit" :face '(:foreground "OrangeRed")))
                  ("Mozilla" . ,(all-the-icons-faicon "firefox" :face '(:foreground "OrangeRed")))
                  ("GitHub" . ,(all-the-icons-faicon "github" :face '(:foreground "DimGray")))
                  ("GitLab" . ,(all-the-icons-fileicon "gitlab" :face '(:foreground "orange")))
                  ("hacker_news" . ,(all-the-icons-faicon "hacker-news" :face '(:foreground "DarkOrange")))
                  ("stack_exchange" . ,(all-the-icons-faicon "stack-exchange" :face '(:foreground "DeepSkyBlue")))
                  ("stack_overflow" . ,(all-the-icons-faicon "stack-overflow" :face '(:foreground "DarkOrange")))
                  ("Wikipedia" . ,(all-the-icons-faicon "wikipedia-w" :face '(:foreground "DimGray")))
                  ("YouTube" . ,(all-the-icons-faicon "youtube-square" :face '(:foreground "red")))
                  ;; ("PornHub" . ,(all-the-icons-faicon "" :face '(:foreground "DarkOrange")))
                  ("Instagram" . ,(all-the-icons-faicon "instagram" :face '(:foreground "gold")))
                  ("Dribbble" . ,(all-the-icons-faicon "dribbble" :face '(:foreground "salmon")))
                  ("Dropbox" . ,(all-the-icons-faicon "dropbox" :face '(:foreground "LightSkyBlue")))
                  ("Baidu" . ,(all-the-icons-faicon "paw" :face '(:foreground "blue")))
                  ("Tencent" . ,(all-the-icons-faicon "qq" :face '(:foreground "CornflowerBlue")))
                  ("QQ" . ,(all-the-icons-faicon "qq" :face '(:foreground "DimGray")))
                  ("weixin" . ,(all-the-icons-faicon "weixin" :face '(:foreground "LawnGreen")))
                  ("wechat" . ,(all-the-icons-faicon "weixin" :face '(:foreground "LawnGreen")))
                  ("weibo" . ,(all-the-icons-faicon "weibo" :face '(:foreground "orange")))
                  ("whatsapp" . ,(all-the-icons-faicon "whatsapp" :face '(:foreground "chartreuse")))))))

(defun org-tag-beautify-set-countries-tag-icons ()
  "Display countries name tag as flag icon."
  (if-let ((dir (concat org-tag-beautify-data-dir "countries/"))
           (available? (file-exists-p dir)))
      (setq org-pretty-tags-surrogate-strings
            (append org-pretty-tags-surrogate-strings
                    `(("afghanistan" . ,(create-image (concat dir "afghanistan.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("aland_islands" . ,(create-image (concat dir "aland-islands.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("albania" . ,(create-image (concat dir "albania.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("algeria" . ,(create-image (concat dir "algeria.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("american_samoa" . ,(create-image (concat dir "american-samoa.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("andorra" . ,(create-image (concat dir "andorra.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("angola" . ,(create-image (concat dir "angola.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("anguilla" . ,(create-image (concat dir "anguilla.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("antigua_and_barbuda" . ,(create-image (concat dir "antigua-and-barbuda.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("argentina" . ,(create-image (concat dir "argentina.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("armenia" . ,(create-image (concat dir "armenia.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("aruba" . ,(create-image (concat dir "aruba.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("australia" . ,(create-image (concat dir "australia.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("austria" . ,(create-image (concat dir "austria.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("azerbaijan" . ,(create-image (concat dir "azerbaijan.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("azores_islands" . ,(create-image (concat dir "azores-islands.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("bahamas" . ,(create-image (concat dir "bahamas.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("bahrain" . ,(create-image (concat dir "bahrain.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("balearic_islands" . ,(create-image (concat dir "balearic-islands.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("bangladesh" . ,(create-image (concat dir "bangladesh.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("barbados" . ,(create-image (concat dir "barbados.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("basque_country" . ,(create-image (concat dir "basque-country.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("belarus" . ,(create-image (concat dir "belarus.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("belgium" . ,(create-image (concat dir "belgium.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("belize" . ,(create-image (concat dir "belize.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("benin" . ,(create-image (concat dir "benin.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("bermuda" . ,(create-image (concat dir "bermuda.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("bhutan" . ,(create-image (concat dir "bhutan.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("bolivia" . ,(create-image (concat dir "bolivia.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("bonaire" . ,(create-image (concat dir "bonaire.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("bosnia_and_herzegovina" . ,(create-image (concat dir "bosnia-and-herzegovina.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("botswana" . ,(create-image (concat dir "botswana.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("brazil" . ,(create-image (concat dir "brazil.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("brunei" . ,(create-image (concat dir "brunei.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("bulgaria" . ,(create-image (concat dir "bulgaria.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("burkina_faso" . ,(create-image (concat dir "burkina-faso.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("burundi" . ,(create-image (concat dir "burundi.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("cambodia" . ,(create-image (concat dir "cambodia.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("cameroon" . ,(create-image (concat dir "cameroon.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("canada" . ,(create-image (concat dir "canada.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("canary_islands" . ,(create-image (concat dir "canary-islands.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("cape_verde" . ,(create-image (concat dir "cape-verde.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("cayman_islands" . ,(create-image (concat dir "cayman-islands.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("central_african_republic" . ,(create-image (concat dir "central-african-republic.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("ceuta" . ,(create-image (concat dir "ceuta.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("chad" . ,(create-image (concat dir "chad.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("chile" . ,(create-image (concat dir "chile.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("china" . ,(create-image (concat dir "china.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("christmas_island" . ,(create-image (concat dir "christmas-island.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("cocos_island" . ,(create-image (concat dir "cocos-island.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("colombia" . ,(create-image (concat dir "colombia.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("comoros" . ,(create-image (concat dir "comoros.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("cook_islands" . ,(create-image (concat dir "cook-islands.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("corsica" . ,(create-image (concat dir "corsica.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("costa_rica" . ,(create-image (concat dir "costa-rica.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("croatia" . ,(create-image (concat dir "croatia.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("cuba" . ,(create-image (concat dir "cuba.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("curacao" . ,(create-image (concat dir "curacao.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("cyprus" . ,(create-image (concat dir "cyprus.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("czech_republic" . ,(create-image (concat dir "czech-republic.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("democratic_republic_of_congo" . ,(create-image (concat dir "democratic-republic-of-congo.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("denmark" . ,(create-image (concat dir "denmark.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("djibouti" . ,(create-image (concat dir "djibouti.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("dominica" . ,(create-image (concat dir "dominica.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("dominican_republic" . ,(create-image (concat dir "dominican-republic.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("east_timor" . ,(create-image (concat dir "east-timor.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("ecuador" . ,(create-image (concat dir "ecuador.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("egypt" . ,(create-image (concat dir "egypt.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("el_salvador" . ,(create-image (concat dir "el-salvador.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("england" . ,(create-image (concat dir "england.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("equatorial_guinea" . ,(create-image (concat dir "equatorial-guinea.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("eritrea" . ,(create-image (concat dir "eritrea.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("estonia" . ,(create-image (concat dir "estonia.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("ethiopia" . ,(create-image (concat dir "ethiopia.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("european_union" . ,(create-image (concat dir "european-union.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("falkland_islands" . ,(create-image (concat dir "falkland-islands.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("faroe_islands" . ,(create-image (concat dir "faroe-islands.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("fiji" . ,(create-image (concat dir "fiji.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("finland" . ,(create-image (concat dir "finland.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("france" . ,(create-image (concat dir "france.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("french_polynesia" . ,(create-image (concat dir "french-polynesia.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("gabon" . ,(create-image (concat dir "gabon.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("galapagos_islands" . ,(create-image (concat dir "galapagos-islands.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("gambia" . ,(create-image (concat dir "gambia.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("georgia" . ,(create-image (concat dir "georgia.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("germany" . ,(create-image (concat dir "germany.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("ghana" . ,(create-image (concat dir "ghana.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("gibraltar" . ,(create-image (concat dir "gibraltar.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("greece" . ,(create-image (concat dir "greece.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("greenland" . ,(create-image (concat dir "greenland.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("grenada" . ,(create-image (concat dir "grenada.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("guam" . ,(create-image (concat dir "guam.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("guatemala" . ,(create-image (concat dir "guatemala.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("guernsey" . ,(create-image (concat dir "guernsey.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("guinea_bissau" . ,(create-image (concat dir "guinea-bissau.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("guinea" . ,(create-image (concat dir "guinea.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("haiti" . ,(create-image (concat dir "haiti.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("hawaii" . ,(create-image (concat dir "hawaii.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("honduras" . ,(create-image (concat dir "honduras.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("hong_kong" . ,(create-image (concat dir "hong-kong.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("hungary" . ,(create-image (concat dir "hungary.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("iceland" . ,(create-image (concat dir "iceland.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("india" . ,(create-image (concat dir "india.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("indonesia" . ,(create-image (concat dir "indonesia.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("iran" . ,(create-image (concat dir "iran.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("iraq" . ,(create-image (concat dir "iraq.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("ireland" . ,(create-image (concat dir "ireland.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("isle_of_man" . ,(create-image (concat dir "isle-of-man.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("israel" . ,(create-image (concat dir "israel.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("italy" . ,(create-image (concat dir "italy.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("ivory_coast" . ,(create-image (concat dir "ivory-coast.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("jamaica" . ,(create-image (concat dir "jamaica.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("japan" . ,(create-image (concat dir "japan.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("jersey" . ,(create-image (concat dir "jersey.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("jordan" . ,(create-image (concat dir "jordan.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("kazakhstan" . ,(create-image (concat dir "kazakhstan.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("kenya" . ,(create-image (concat dir "kenya.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("kiribati" . ,(create-image (concat dir "kiribati.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("kosovo" . ,(create-image (concat dir "kosovo.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("kuwait" . ,(create-image (concat dir "kuwait.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("kyrgyzstan" . ,(create-image (concat dir "kyrgyzstan.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("laos" . ,(create-image (concat dir "laos.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("latvia" . ,(create-image (concat dir "latvia.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("lebanon" . ,(create-image (concat dir "lebanon.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("lesotho" . ,(create-image (concat dir "lesotho.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("liberia" . ,(create-image (concat dir "liberia.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("libya" . ,(create-image (concat dir "libya.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("liechtenstein" . ,(create-image (concat dir "liechtenstein.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("lithuania" . ,(create-image (concat dir "lithuania.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("luxembourg" . ,(create-image (concat dir "luxembourg.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("macao" . ,(create-image (concat dir "macao.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("madagascar" . ,(create-image (concat dir "madagascar.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("madeira" . ,(create-image (concat dir "madeira.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("malawi" . ,(create-image (concat dir "malawi.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("malaysia" . ,(create-image (concat dir "malaysia.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("maldives" . ,(create-image (concat dir "maldives.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("mali" . ,(create-image (concat dir "mali.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("malta" . ,(create-image (concat dir "malta.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("marshall_island" . ,(create-image (concat dir "marshall-island.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("martinique" . ,(create-image (concat dir "martinique.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("mauritania" . ,(create-image (concat dir "mauritania.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("mauritius" . ,(create-image (concat dir "mauritius.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("melilla" . ,(create-image (concat dir "melilla.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("mexico" . ,(create-image (concat dir "mexico.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("micronesia" . ,(create-image (concat dir "micronesia.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("moldova" . ,(create-image (concat dir "moldova.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("monaco" . ,(create-image (concat dir "monaco.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("mongolia" . ,(create-image (concat dir "mongolia.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("montenegro" . ,(create-image (concat dir "montenegro.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("montserrat" . ,(create-image (concat dir "montserrat.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("morocco" . ,(create-image (concat dir "morocco.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("mozambique" . ,(create-image (concat dir "mozambique.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("myanmar" . ,(create-image (concat dir "myanmar.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("namibia" . ,(create-image (concat dir "namibia.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("nauru" . ,(create-image (concat dir "nauru.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("nepal" . ,(create-image (concat dir "nepal.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("netherlands" . ,(create-image (concat dir "netherlands.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("new_zealand" . ,(create-image (concat dir "new-zealand.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("nicaragua" . ,(create-image (concat dir "nicaragua.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("niger" . ,(create-image (concat dir "niger.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("nigeria" . ,(create-image (concat dir "nigeria.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("niue" . ,(create-image (concat dir "niue.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("norfolk_island" . ,(create-image (concat dir "norfolk-island.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("north_korea" . ,(create-image (concat dir "north-korea.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("northen_cyprus" . ,(create-image (concat dir "northen-cyprus.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("northern_marianas_islands" . ,(create-image (concat dir "northern-marianas-islands.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("norway" . ,(create-image (concat dir "norway.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("oman" . ,(create-image (concat dir "oman.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("orkney_islands" . ,(create-image (concat dir "orkney-islands.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("ossetia" . ,(create-image (concat dir "ossetia.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("otan" . ,(create-image (concat dir "otan.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("pakistan" . ,(create-image (concat dir "pakistan.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("palau" . ,(create-image (concat dir "palau.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("palestine" . ,(create-image (concat dir "palestine.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("panama" . ,(create-image (concat dir "panama.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("papua_new_guinea" . ,(create-image (concat dir "papua-new-guinea.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("peru" . ,(create-image (concat dir "peru.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("philippines" . ,(create-image (concat dir "philippines.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("pitcairn_islands" . ,(create-image (concat dir "pitcairn-islands.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("poland" . ,(create-image (concat dir "poland.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("portugal" . ,(create-image (concat dir "portugal.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("puerto_rico" . ,(create-image (concat dir "puerto-rico.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("qatar" . ,(create-image (concat dir "qatar.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("rapa_nui" . ,(create-image (concat dir "rapa-nui.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("republic_of_macedonia" . ,(create-image (concat dir "republic-of-macedonia.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("republic_of_the_congo" . ,(create-image (concat dir "republic-of-the-congo.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("romania" . ,(create-image (concat dir "romania.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("russia" . ,(create-image (concat dir "russia.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("rwanda" . ,(create-image (concat dir "rwanda.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("saba_island" . ,(create-image (concat dir "saba-island.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("sahrawi_arab_democratic_republic" . ,(create-image (concat dir "sahrawi-arab-democratic-republic.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("saint_kitts_and_nevis" . ,(create-image (concat dir "saint-kitts-and-nevis.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("samoa" . ,(create-image (concat dir "samoa.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("san_marino" . ,(create-image (concat dir "san-marino.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("sao_tome_and_principe" . ,(create-image (concat dir "sao-tome-and-principe.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("sardinia" . ,(create-image (concat dir "sardinia.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("saudi_arabia" . ,(create-image (concat dir "saudi-arabia.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("scotland" . ,(create-image (concat dir "scotland.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("senegal" . ,(create-image (concat dir "senegal.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("serbia" . ,(create-image (concat dir "serbia.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("seychelles" . ,(create-image (concat dir "seychelles.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("sicily" . ,(create-image (concat dir "sicily.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("sierra_leone" . ,(create-image (concat dir "sierra-leone.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("singapore" . ,(create-image (concat dir "singapore.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("sint_eustatius" . ,(create-image (concat dir "sint-eustatius.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("sint_maarten" . ,(create-image (concat dir "sint-maarten.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("slovakia" . ,(create-image (concat dir "slovakia.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("slovenia" . ,(create-image (concat dir "slovenia.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("solomon_islands" . ,(create-image (concat dir "solomon-islands.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("somalia" . ,(create-image (concat dir "somalia.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("somaliland" . ,(create-image (concat dir "somaliland.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("south_africa" . ,(create-image (concat dir "south-africa.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("south_korea" . ,(create-image (concat dir "south-korea.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("south_sudan" . ,(create-image (concat dir "south-sudan.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("spain" . ,(create-image (concat dir "spain.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("sri_lanka" . ,(create-image (concat dir "sri-lanka.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("st_barts" . ,(create-image (concat dir "st-barts.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("st_lucia" . ,(create-image (concat dir "st-lucia.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("st_vincent_and_the_grenadines" . ,(create-image (concat dir "st-vincent-and-the-grenadines.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("sudan" . ,(create-image (concat dir "sudan.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("suriname" . ,(create-image (concat dir "suriname.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("swaziland" . ,(create-image (concat dir "swaziland.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("sweden" . ,(create-image (concat dir "sweden.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("switzerland" . ,(create-image (concat dir "switzerland.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("syria" . ,(create-image (concat dir "syria.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("taiwan" . ,(create-image (concat dir "taiwan.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("tajikistan" . ,(create-image (concat dir "tajikistan.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("tanzania" . ,(create-image (concat dir "tanzania.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("thailand" . ,(create-image (concat dir "thailand.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("tibet" . ,(create-image (concat dir "tibet.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("togo" . ,(create-image (concat dir "togo.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("tokelau" . ,(create-image (concat dir "tokelau.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("tonga" . ,(create-image (concat dir "tonga.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("transnistria" . ,(create-image (concat dir "transnistria.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("trinidad_and_tobago" . ,(create-image (concat dir "trinidad-and-tobago.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("tubalu" . ,(create-image (concat dir "tubalu.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("tunisia" . ,(create-image (concat dir "tunisia.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("turkey" . ,(create-image (concat dir "turkey.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("turkmenistan" . ,(create-image (concat dir "turkmenistan.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("turks_and_caicos" . ,(create-image (concat dir "turks-and-caicos.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("uganda" . ,(create-image (concat dir "uganda.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("ukraine" . ,(create-image (concat dir "ukraine.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("united_arab_emirates" . ,(create-image (concat dir "united-arab-emirates.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("united_kingdom" . ,(create-image (concat dir "united-kingdom.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("united_nations" . ,(create-image (concat dir "united-nations.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("america" . ,(create-image (concat dir "united-states-of-america.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("uruguay" . ,(create-image (concat dir "uruguay.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("uzbekistan" . ,(create-image (concat dir "uzbekistn.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("vanuatu" . ,(create-image (concat dir "vanuatu.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("vatican_city" . ,(create-image (concat dir "vatican-city.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("venezuela" . ,(create-image (concat dir "venezuela.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("vietnam" . ,(create-image (concat dir "vietnam.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("virgin_islands" . ,(create-image (concat dir "virgin-islands.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("singapore" . ,(create-image (concat dir "singapore.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("yemen" . ,(create-image (concat dir "yemen.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("zambia" . ,(create-image (concat dir "zambia.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width))
                      ("zimbabwe" . ,(create-image (concat dir "zimbabwe.png") nil nil :ascent 'center :height org-tag-beautify-icon-height :width org-tag-beautify-icon-width)))))))

(defun org-tag-beautify-enable ()
  "Enable `org-tag-beautify'."
  (org-tag-beautify-set-common-tag-icons)
  (org-tag-beautify-set-programming-tag-icons)
  (org-tag-beautify-set-internet-company-tag-icons)
  (org-tag-beautify-set-countries-tag-icons)
  (org-pretty-tags-global-mode 1))

(defun org-tag-beautify-disable ()
  "Disable `org-tag-beautify'."
  (setq org-pretty-tags-surrogate-strings nil)
  (org-pretty-tags-global-mode -1))

;;;###autoload
(define-minor-mode org-tag-beautify-mode
  "A minor mode that beautify Org tags with icons and images."
  :init-value nil
  :lighter nil
  :group 'org-tag-beautify
  :global t
  (if org-tag-beautify-mode
      (org-tag-beautify-enable)
    (org-tag-beautify-disable)))



(provide 'org-tag-beautify)

;;; org-tag-beautify.el ends here
